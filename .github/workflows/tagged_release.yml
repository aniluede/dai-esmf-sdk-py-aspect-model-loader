name: Release

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Version number of the release'
        required: true

jobs:
  gh_tagged_release:
    name: Create tagged release
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        poetry-version: [ 1.5.0 ]
        os: [ ubuntu-latest ]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Setup Git
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com

      - name: Set versions
        run: |
          release_version=${{ github.event.inputs.release_version }}
          release_branch_name=${release_version%.*}.x
          echo "release_branch_name=$release_branch_name" >> $GITHUB_ENV

      - name: Set antora version
        run: yq eval -i '.version = "${{ github.event.inputs.release_version }}"' documentation/python-sdk-guide/antora.yml

      - name: Commit version changes and push to upstream repository
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          branch: ${{ env.release_branch_name }}
          commit_user_name: github-actions
          commit_user_email: github-actions@github.com
          commit_author: Author <actions@github.com>
          file_pattern: 'documentation/python-sdk-guide/antora.yml'

      - name: Install poetry ${{ matrix.poetry-version }}
        run: |
          python -m ensurepip
          python -m pip install --upgrade pip
          python -m pip install poetry==${{ matrix.poetry-version }}

      - name: Set and build esmf-aspect project
        id: ESMF_version
        run: |
          cd core/esmf-aspect-meta-model-python
          poetry version ${{ github.event.inputs.release_version }}
          poetry install
          poetry run download-samm-release
          poetry build
          echo "EsmfVersion=poetry version -s" >> $GITHUB_ENV
          echo "::set-output name=EsmfVersion::$(poetry version -s)"

      - name: "Create Github release (full)"
        if: ${{ (!contains( github.ref, 'b' )) }}
        uses: softprops/action-gh-release@v1
        id: esmf_sdk_js_release
        with:
          body: "Release version ${{steps.ESMF_version.outputs.EsmfVersion}}."
          tag_name: v${{ github.event.inputs.release_version }}
          target_commitish: ${{ env.release_branch_name }}
          draft: false
          prerelease: false
          files: core/esmf-aspect-meta-model-python/dist/esmf-aspect-meta-model-python-${{steps.ESMF_version.outputs.EsmfVersion}}.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN  }}

      - name: "Create Github release (milestone)"
        if: ${{ (contains( github.ref, 'b' )) }}
        uses: softprops/action-gh-release@v1
        id: sds_sdk_js_release
        with:
          body: "Release version ${{steps.ESMF_version.outputs.EsmfVersion}}."
          tag_name: v${{ github.event.inputs.release_version }}
          target_commitish: ${{ env.release_branch_name }}
          draft: false
          prerelease: true
          files: core/esmf-aspect-meta-model-python/dist/esmf-aspect-meta-model-python-${{steps.ESMF_version.outputs.EsmfVersion}}.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN  }}
